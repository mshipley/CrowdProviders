//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17020
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 
namespace CrowdProviders
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "SecurityServerHttpBinding", Namespace = "urn:SecurityServer")]
    public partial class SecurityServer : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback findAllGroupRelationshipsOperationCompleted;

        private System.Threading.SendOrPostCallback addGroupOperationCompleted;

        private System.Threading.SendOrPostCallback addPrincipalToRoleOperationCompleted;

        private System.Threading.SendOrPostCallback findPrincipalByTokenOperationCompleted;

        private System.Threading.SendOrPostCallback updatePrincipalCredentialOperationCompleted;

        private System.Threading.SendOrPostCallback getGrantedAuthoritiesOperationCompleted;

        private System.Threading.SendOrPostCallback addPrincipalOperationCompleted;

        private System.Threading.SendOrPostCallback addAttributeToPrincipalOperationCompleted;

        private System.Threading.SendOrPostCallback invalidatePrincipalTokenOperationCompleted;

        private System.Threading.SendOrPostCallback findAllGroupNamesOperationCompleted;

        private System.Threading.SendOrPostCallback findRoleMembershipsOperationCompleted;

        private System.Threading.SendOrPostCallback removePrincipalOperationCompleted;

        private System.Threading.SendOrPostCallback isValidPrincipalTokenOperationCompleted;

        private System.Threading.SendOrPostCallback authenticatePrincipalSimpleOperationCompleted;

        private System.Threading.SendOrPostCallback removeRoleOperationCompleted;

        private System.Threading.SendOrPostCallback getCookieInfoOperationCompleted;

        private System.Threading.SendOrPostCallback updatePrincipalAttributeOperationCompleted;

        private System.Threading.SendOrPostCallback searchGroupsOperationCompleted;

        private System.Threading.SendOrPostCallback getCacheTimeOperationCompleted;

        private System.Threading.SendOrPostCallback isRoleMemberOperationCompleted;

        private System.Threading.SendOrPostCallback updateGroupOperationCompleted;

        private System.Threading.SendOrPostCallback addAttributeToGroupOperationCompleted;

        private System.Threading.SendOrPostCallback findAllRoleNamesOperationCompleted;

        private System.Threading.SendOrPostCallback findRoleByNameOperationCompleted;

        private System.Threading.SendOrPostCallback isCacheEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback findGroupByNameOperationCompleted;

        private System.Threading.SendOrPostCallback findGroupWithAttributesByNameOperationCompleted;

        private System.Threading.SendOrPostCallback removePrincipalFromRoleOperationCompleted;

        private System.Threading.SendOrPostCallback findPrincipalWithAttributesByNameOperationCompleted;

        private System.Threading.SendOrPostCallback authenticatePrincipalOperationCompleted;

        private System.Threading.SendOrPostCallback findGroupMembershipsOperationCompleted;

        private System.Threading.SendOrPostCallback addPrincipalToGroupOperationCompleted;

        private System.Threading.SendOrPostCallback removeGroupOperationCompleted;

        private System.Threading.SendOrPostCallback removeAttributeFromGroupOperationCompleted;

        private System.Threading.SendOrPostCallback addAllPrincipalsOperationCompleted;

        private System.Threading.SendOrPostCallback removeAttributeFromPrincipalOperationCompleted;

        private System.Threading.SendOrPostCallback addRoleOperationCompleted;

        private System.Threading.SendOrPostCallback findAllPrincipalNamesOperationCompleted;

        private System.Threading.SendOrPostCallback createPrincipalTokenOperationCompleted;

        private System.Threading.SendOrPostCallback searchRolesOperationCompleted;

        private System.Threading.SendOrPostCallback removePrincipalFromGroupOperationCompleted;

        private System.Threading.SendOrPostCallback findPrincipalByNameOperationCompleted;

        private System.Threading.SendOrPostCallback resetPrincipalCredentialOperationCompleted;

        private System.Threading.SendOrPostCallback updateGroupAttributeOperationCompleted;

        private System.Threading.SendOrPostCallback isGroupMemberOperationCompleted;

        private System.Threading.SendOrPostCallback searchPrincipalsOperationCompleted;

        private System.Threading.SendOrPostCallback getDomainOperationCompleted;

        private System.Threading.SendOrPostCallback authenticateApplicationOperationCompleted;

        /// <remarks/>
        public SecurityServer(string URL)
        {
            this.Url = URL;
        }

        /// <remarks/>
        public event findAllGroupRelationshipsCompletedEventHandler findAllGroupRelationshipsCompleted;

        /// <remarks/>
        public event addGroupCompletedEventHandler addGroupCompleted;

        /// <remarks/>
        public event addPrincipalToRoleCompletedEventHandler addPrincipalToRoleCompleted;

        /// <remarks/>
        public event findPrincipalByTokenCompletedEventHandler findPrincipalByTokenCompleted;

        /// <remarks/>
        public event updatePrincipalCredentialCompletedEventHandler updatePrincipalCredentialCompleted;

        /// <remarks/>
        public event getGrantedAuthoritiesCompletedEventHandler getGrantedAuthoritiesCompleted;

        /// <remarks/>
        public event addPrincipalCompletedEventHandler addPrincipalCompleted;

        /// <remarks/>
        public event addAttributeToPrincipalCompletedEventHandler addAttributeToPrincipalCompleted;

        /// <remarks/>
        public event invalidatePrincipalTokenCompletedEventHandler invalidatePrincipalTokenCompleted;

        /// <remarks/>
        public event findAllGroupNamesCompletedEventHandler findAllGroupNamesCompleted;

        /// <remarks/>
        public event findRoleMembershipsCompletedEventHandler findRoleMembershipsCompleted;

        /// <remarks/>
        public event removePrincipalCompletedEventHandler removePrincipalCompleted;

        /// <remarks/>
        public event isValidPrincipalTokenCompletedEventHandler isValidPrincipalTokenCompleted;

        /// <remarks/>
        public event authenticatePrincipalSimpleCompletedEventHandler authenticatePrincipalSimpleCompleted;

        /// <remarks/>
        public event removeRoleCompletedEventHandler removeRoleCompleted;

        /// <remarks/>
        public event getCookieInfoCompletedEventHandler getCookieInfoCompleted;

        /// <remarks/>
        public event updatePrincipalAttributeCompletedEventHandler updatePrincipalAttributeCompleted;

        /// <remarks/>
        public event searchGroupsCompletedEventHandler searchGroupsCompleted;

        /// <remarks/>
        public event getCacheTimeCompletedEventHandler getCacheTimeCompleted;

        /// <remarks/>
        public event isRoleMemberCompletedEventHandler isRoleMemberCompleted;

        /// <remarks/>
        public event updateGroupCompletedEventHandler updateGroupCompleted;

        /// <remarks/>
        public event addAttributeToGroupCompletedEventHandler addAttributeToGroupCompleted;

        /// <remarks/>
        public event findAllRoleNamesCompletedEventHandler findAllRoleNamesCompleted;

        /// <remarks/>
        public event findRoleByNameCompletedEventHandler findRoleByNameCompleted;

        /// <remarks/>
        public event isCacheEnabledCompletedEventHandler isCacheEnabledCompleted;

        /// <remarks/>
        public event findGroupByNameCompletedEventHandler findGroupByNameCompleted;

        /// <remarks/>
        public event findGroupWithAttributesByNameCompletedEventHandler findGroupWithAttributesByNameCompleted;

        /// <remarks/>
        public event removePrincipalFromRoleCompletedEventHandler removePrincipalFromRoleCompleted;

        /// <remarks/>
        public event findPrincipalWithAttributesByNameCompletedEventHandler findPrincipalWithAttributesByNameCompleted;

        /// <remarks/>
        public event authenticatePrincipalCompletedEventHandler authenticatePrincipalCompleted;

        /// <remarks/>
        public event findGroupMembershipsCompletedEventHandler findGroupMembershipsCompleted;

        /// <remarks/>
        public event addPrincipalToGroupCompletedEventHandler addPrincipalToGroupCompleted;

        /// <remarks/>
        public event removeGroupCompletedEventHandler removeGroupCompleted;

        /// <remarks/>
        public event removeAttributeFromGroupCompletedEventHandler removeAttributeFromGroupCompleted;

        /// <remarks/>
        public event addAllPrincipalsCompletedEventHandler addAllPrincipalsCompleted;

        /// <remarks/>
        public event removeAttributeFromPrincipalCompletedEventHandler removeAttributeFromPrincipalCompleted;

        /// <remarks/>
        public event addRoleCompletedEventHandler addRoleCompleted;

        /// <remarks/>
        public event findAllPrincipalNamesCompletedEventHandler findAllPrincipalNamesCompleted;

        /// <remarks/>
        public event createPrincipalTokenCompletedEventHandler createPrincipalTokenCompleted;

        /// <remarks/>
        public event searchRolesCompletedEventHandler searchRolesCompleted;

        /// <remarks/>
        public event removePrincipalFromGroupCompletedEventHandler removePrincipalFromGroupCompleted;

        /// <remarks/>
        public event findPrincipalByNameCompletedEventHandler findPrincipalByNameCompleted;

        /// <remarks/>
        public event resetPrincipalCredentialCompletedEventHandler resetPrincipalCredentialCompleted;

        /// <remarks/>
        public event updateGroupAttributeCompletedEventHandler updateGroupAttributeCompleted;

        /// <remarks/>
        public event isGroupMemberCompletedEventHandler isGroupMemberCompleted;

        /// <remarks/>
        public event searchPrincipalsCompletedEventHandler searchPrincipalsCompleted;

        /// <remarks/>
        public event getDomainCompletedEventHandler getDomainCompleted;

        /// <remarks/>
        public event authenticateApplicationCompletedEventHandler authenticateApplicationCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable = true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://soap.integration.crowd.atlassian.com")]
        public SOAPNestableGroup[] findAllGroupRelationships([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0)
        {
            object[] results = this.Invoke("findAllGroupRelationships", new object[] {
                    in0});
            return ((SOAPNestableGroup[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginfindAllGroupRelationships(AuthenticatedToken in0, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("findAllGroupRelationships", new object[] {
                    in0}, callback, asyncState);
        }

        /// <remarks/>
        public SOAPNestableGroup[] EndfindAllGroupRelationships(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SOAPNestableGroup[])(results[0]));
        }

        /// <remarks/>
        public void findAllGroupRelationshipsAsync(AuthenticatedToken in0)
        {
            this.findAllGroupRelationshipsAsync(in0, null);
        }

        /// <remarks/>
        public void findAllGroupRelationshipsAsync(AuthenticatedToken in0, object userState)
        {
            if ((this.findAllGroupRelationshipsOperationCompleted == null))
            {
                this.findAllGroupRelationshipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindAllGroupRelationshipsOperationCompleted);
            }
            this.InvokeAsync("findAllGroupRelationships", new object[] {
                    in0}, this.findAllGroupRelationshipsOperationCompleted, userState);
        }

        private void OnfindAllGroupRelationshipsOperationCompleted(object arg)
        {
            if ((this.findAllGroupRelationshipsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findAllGroupRelationshipsCompleted(this, new findAllGroupRelationshipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable = true)]
        public SOAPGroup addGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] SOAPGroup in1)
        {
            object[] results = this.Invoke("addGroup", new object[] {
                    in0,
                    in1});
            return ((SOAPGroup)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddGroup(AuthenticatedToken in0, SOAPGroup in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addGroup", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public SOAPGroup EndaddGroup(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SOAPGroup)(results[0]));
        }

        /// <remarks/>
        public void addGroupAsync(AuthenticatedToken in0, SOAPGroup in1)
        {
            this.addGroupAsync(in0, in1, null);
        }

        /// <remarks/>
        public void addGroupAsync(AuthenticatedToken in0, SOAPGroup in1, object userState)
        {
            if ((this.addGroupOperationCompleted == null))
            {
                this.addGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddGroupOperationCompleted);
            }
            this.InvokeAsync("addGroup", new object[] {
                    in0,
                    in1}, this.addGroupOperationCompleted, userState);
        }

        private void OnaddGroupOperationCompleted(object arg)
        {
            if ((this.addGroupCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addGroupCompleted(this, new addGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addPrincipalToRole([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in2)
        {
            this.Invoke("addPrincipalToRole", new object[] {
                    in0,
                    in1,
                    in2});
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddPrincipalToRole(AuthenticatedToken in0, string in1, string in2, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addPrincipalToRole", new object[] {
                    in0,
                    in1,
                    in2}, callback, asyncState);
        }

        /// <remarks/>
        public void EndaddPrincipalToRole(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void addPrincipalToRoleAsync(AuthenticatedToken in0, string in1, string in2)
        {
            this.addPrincipalToRoleAsync(in0, in1, in2, null);
        }

        /// <remarks/>
        public void addPrincipalToRoleAsync(AuthenticatedToken in0, string in1, string in2, object userState)
        {
            if ((this.addPrincipalToRoleOperationCompleted == null))
            {
                this.addPrincipalToRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPrincipalToRoleOperationCompleted);
            }
            this.InvokeAsync("addPrincipalToRole", new object[] {
                    in0,
                    in1,
                    in2}, this.addPrincipalToRoleOperationCompleted, userState);
        }

        private void OnaddPrincipalToRoleOperationCompleted(object arg)
        {
            if ((this.addPrincipalToRoleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPrincipalToRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable = true)]
        public SOAPPrincipal findPrincipalByToken([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1)
        {
            object[] results = this.Invoke("findPrincipalByToken", new object[] {
                    in0,
                    in1});
            return ((SOAPPrincipal)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginfindPrincipalByToken(AuthenticatedToken in0, string in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("findPrincipalByToken", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public SOAPPrincipal EndfindPrincipalByToken(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SOAPPrincipal)(results[0]));
        }

        /// <remarks/>
        public void findPrincipalByTokenAsync(AuthenticatedToken in0, string in1)
        {
            this.findPrincipalByTokenAsync(in0, in1, null);
        }

        /// <remarks/>
        public void findPrincipalByTokenAsync(AuthenticatedToken in0, string in1, object userState)
        {
            if ((this.findPrincipalByTokenOperationCompleted == null))
            {
                this.findPrincipalByTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindPrincipalByTokenOperationCompleted);
            }
            this.InvokeAsync("findPrincipalByToken", new object[] {
                    in0,
                    in1}, this.findPrincipalByTokenOperationCompleted, userState);
        }

        private void OnfindPrincipalByTokenOperationCompleted(object arg)
        {
            if ((this.findPrincipalByTokenCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findPrincipalByTokenCompleted(this, new findPrincipalByTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updatePrincipalCredential([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] PasswordCredential in2)
        {
            this.Invoke("updatePrincipalCredential", new object[] {
                    in0,
                    in1,
                    in2});
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdatePrincipalCredential(AuthenticatedToken in0, string in1, PasswordCredential in2, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updatePrincipalCredential", new object[] {
                    in0,
                    in1,
                    in2}, callback, asyncState);
        }

        /// <remarks/>
        public void EndupdatePrincipalCredential(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void updatePrincipalCredentialAsync(AuthenticatedToken in0, string in1, PasswordCredential in2)
        {
            this.updatePrincipalCredentialAsync(in0, in1, in2, null);
        }

        /// <remarks/>
        public void updatePrincipalCredentialAsync(AuthenticatedToken in0, string in1, PasswordCredential in2, object userState)
        {
            if ((this.updatePrincipalCredentialOperationCompleted == null))
            {
                this.updatePrincipalCredentialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePrincipalCredentialOperationCompleted);
            }
            this.InvokeAsync("updatePrincipalCredential", new object[] {
                    in0,
                    in1,
                    in2}, this.updatePrincipalCredentialOperationCompleted, userState);
        }

        private void OnupdatePrincipalCredentialOperationCompleted(object arg)
        {
            if ((this.updatePrincipalCredentialCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePrincipalCredentialCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable = true)]
        public string[] getGrantedAuthorities([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0)
        {
            object[] results = this.Invoke("getGrantedAuthorities", new object[] {
                    in0});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetGrantedAuthorities(AuthenticatedToken in0, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getGrantedAuthorities", new object[] {
                    in0}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndgetGrantedAuthorities(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void getGrantedAuthoritiesAsync(AuthenticatedToken in0)
        {
            this.getGrantedAuthoritiesAsync(in0, null);
        }

        /// <remarks/>
        public void getGrantedAuthoritiesAsync(AuthenticatedToken in0, object userState)
        {
            if ((this.getGrantedAuthoritiesOperationCompleted == null))
            {
                this.getGrantedAuthoritiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGrantedAuthoritiesOperationCompleted);
            }
            this.InvokeAsync("getGrantedAuthorities", new object[] {
                    in0}, this.getGrantedAuthoritiesOperationCompleted, userState);
        }

        private void OngetGrantedAuthoritiesOperationCompleted(object arg)
        {
            if ((this.getGrantedAuthoritiesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGrantedAuthoritiesCompleted(this, new getGrantedAuthoritiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable = true)]
        public SOAPPrincipal addPrincipal([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] SOAPPrincipal in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] PasswordCredential in2)
        {
            object[] results = this.Invoke("addPrincipal", new object[] {
                    in0,
                    in1,
                    in2});
            return ((SOAPPrincipal)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddPrincipal(AuthenticatedToken in0, SOAPPrincipal in1, PasswordCredential in2, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addPrincipal", new object[] {
                    in0,
                    in1,
                    in2}, callback, asyncState);
        }

        /// <remarks/>
        public SOAPPrincipal EndaddPrincipal(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SOAPPrincipal)(results[0]));
        }

        /// <remarks/>
        public void addPrincipalAsync(AuthenticatedToken in0, SOAPPrincipal in1, PasswordCredential in2)
        {
            this.addPrincipalAsync(in0, in1, in2, null);
        }

        /// <remarks/>
        public void addPrincipalAsync(AuthenticatedToken in0, SOAPPrincipal in1, PasswordCredential in2, object userState)
        {
            if ((this.addPrincipalOperationCompleted == null))
            {
                this.addPrincipalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPrincipalOperationCompleted);
            }
            this.InvokeAsync("addPrincipal", new object[] {
                    in0,
                    in1,
                    in2}, this.addPrincipalOperationCompleted, userState);
        }

        private void OnaddPrincipalOperationCompleted(object arg)
        {
            if ((this.addPrincipalCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPrincipalCompleted(this, new addPrincipalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addAttributeToPrincipal([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] SOAPAttribute in2)
        {
            this.Invoke("addAttributeToPrincipal", new object[] {
                    in0,
                    in1,
                    in2});
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddAttributeToPrincipal(AuthenticatedToken in0, string in1, SOAPAttribute in2, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addAttributeToPrincipal", new object[] {
                    in0,
                    in1,
                    in2}, callback, asyncState);
        }

        /// <remarks/>
        public void EndaddAttributeToPrincipal(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void addAttributeToPrincipalAsync(AuthenticatedToken in0, string in1, SOAPAttribute in2)
        {
            this.addAttributeToPrincipalAsync(in0, in1, in2, null);
        }

        /// <remarks/>
        public void addAttributeToPrincipalAsync(AuthenticatedToken in0, string in1, SOAPAttribute in2, object userState)
        {
            if ((this.addAttributeToPrincipalOperationCompleted == null))
            {
                this.addAttributeToPrincipalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAttributeToPrincipalOperationCompleted);
            }
            this.InvokeAsync("addAttributeToPrincipal", new object[] {
                    in0,
                    in1,
                    in2}, this.addAttributeToPrincipalOperationCompleted, userState);
        }

        private void OnaddAttributeToPrincipalOperationCompleted(object arg)
        {
            if ((this.addAttributeToPrincipalCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAttributeToPrincipalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void invalidatePrincipalToken([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1)
        {
            this.Invoke("invalidatePrincipalToken", new object[] {
                    in0,
                    in1});
        }

        /// <remarks/>
        public System.IAsyncResult BegininvalidatePrincipalToken(AuthenticatedToken in0, string in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("invalidatePrincipalToken", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public void EndinvalidatePrincipalToken(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void invalidatePrincipalTokenAsync(AuthenticatedToken in0, string in1)
        {
            this.invalidatePrincipalTokenAsync(in0, in1, null);
        }

        /// <remarks/>
        public void invalidatePrincipalTokenAsync(AuthenticatedToken in0, string in1, object userState)
        {
            if ((this.invalidatePrincipalTokenOperationCompleted == null))
            {
                this.invalidatePrincipalTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OninvalidatePrincipalTokenOperationCompleted);
            }
            this.InvokeAsync("invalidatePrincipalToken", new object[] {
                    in0,
                    in1}, this.invalidatePrincipalTokenOperationCompleted, userState);
        }

        private void OninvalidatePrincipalTokenOperationCompleted(object arg)
        {
            if ((this.invalidatePrincipalTokenCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.invalidatePrincipalTokenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable = true)]
        public string[] findAllGroupNames([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0)
        {
            object[] results = this.Invoke("findAllGroupNames", new object[] {
                    in0});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginfindAllGroupNames(AuthenticatedToken in0, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("findAllGroupNames", new object[] {
                    in0}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndfindAllGroupNames(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void findAllGroupNamesAsync(AuthenticatedToken in0)
        {
            this.findAllGroupNamesAsync(in0, null);
        }

        /// <remarks/>
        public void findAllGroupNamesAsync(AuthenticatedToken in0, object userState)
        {
            if ((this.findAllGroupNamesOperationCompleted == null))
            {
                this.findAllGroupNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindAllGroupNamesOperationCompleted);
            }
            this.InvokeAsync("findAllGroupNames", new object[] {
                    in0}, this.findAllGroupNamesOperationCompleted, userState);
        }

        private void OnfindAllGroupNamesOperationCompleted(object arg)
        {
            if ((this.findAllGroupNamesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findAllGroupNamesCompleted(this, new findAllGroupNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable = true)]
        public string[] findRoleMemberships([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1)
        {
            object[] results = this.Invoke("findRoleMemberships", new object[] {
                    in0,
                    in1});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginfindRoleMemberships(AuthenticatedToken in0, string in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("findRoleMemberships", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndfindRoleMemberships(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void findRoleMembershipsAsync(AuthenticatedToken in0, string in1)
        {
            this.findRoleMembershipsAsync(in0, in1, null);
        }

        /// <remarks/>
        public void findRoleMembershipsAsync(AuthenticatedToken in0, string in1, object userState)
        {
            if ((this.findRoleMembershipsOperationCompleted == null))
            {
                this.findRoleMembershipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindRoleMembershipsOperationCompleted);
            }
            this.InvokeAsync("findRoleMemberships", new object[] {
                    in0,
                    in1}, this.findRoleMembershipsOperationCompleted, userState);
        }

        private void OnfindRoleMembershipsOperationCompleted(object arg)
        {
            if ((this.findRoleMembershipsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findRoleMembershipsCompleted(this, new findRoleMembershipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removePrincipal([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1)
        {
            this.Invoke("removePrincipal", new object[] {
                    in0,
                    in1});
        }

        /// <remarks/>
        public System.IAsyncResult BeginremovePrincipal(AuthenticatedToken in0, string in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("removePrincipal", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public void EndremovePrincipal(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void removePrincipalAsync(AuthenticatedToken in0, string in1)
        {
            this.removePrincipalAsync(in0, in1, null);
        }

        /// <remarks/>
        public void removePrincipalAsync(AuthenticatedToken in0, string in1, object userState)
        {
            if ((this.removePrincipalOperationCompleted == null))
            {
                this.removePrincipalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremovePrincipalOperationCompleted);
            }
            this.InvokeAsync("removePrincipal", new object[] {
                    in0,
                    in1}, this.removePrincipalOperationCompleted, userState);
        }

        private void OnremovePrincipalOperationCompleted(object arg)
        {
            if ((this.removePrincipalCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removePrincipalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public bool isValidPrincipalToken([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1, [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://authentication.integration.crowd.atlassian.com")] ValidationFactor[] in2)
        {
            object[] results = this.Invoke("isValidPrincipalToken", new object[] {
                    in0,
                    in1,
                    in2});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginisValidPrincipalToken(AuthenticatedToken in0, string in1, ValidationFactor[] in2, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("isValidPrincipalToken", new object[] {
                    in0,
                    in1,
                    in2}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndisValidPrincipalToken(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void isValidPrincipalTokenAsync(AuthenticatedToken in0, string in1, ValidationFactor[] in2)
        {
            this.isValidPrincipalTokenAsync(in0, in1, in2, null);
        }

        /// <remarks/>
        public void isValidPrincipalTokenAsync(AuthenticatedToken in0, string in1, ValidationFactor[] in2, object userState)
        {
            if ((this.isValidPrincipalTokenOperationCompleted == null))
            {
                this.isValidPrincipalTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisValidPrincipalTokenOperationCompleted);
            }
            this.InvokeAsync("isValidPrincipalToken", new object[] {
                    in0,
                    in1,
                    in2}, this.isValidPrincipalTokenOperationCompleted, userState);
        }

        private void OnisValidPrincipalTokenOperationCompleted(object arg)
        {
            if ((this.isValidPrincipalTokenCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isValidPrincipalTokenCompleted(this, new isValidPrincipalTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable = true)]
        public string authenticatePrincipalSimple([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in2)
        {
            object[] results = this.Invoke("authenticatePrincipalSimple", new object[] {
                    in0,
                    in1,
                    in2});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginauthenticatePrincipalSimple(AuthenticatedToken in0, string in1, string in2, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("authenticatePrincipalSimple", new object[] {
                    in0,
                    in1,
                    in2}, callback, asyncState);
        }

        /// <remarks/>
        public string EndauthenticatePrincipalSimple(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void authenticatePrincipalSimpleAsync(AuthenticatedToken in0, string in1, string in2)
        {
            this.authenticatePrincipalSimpleAsync(in0, in1, in2, null);
        }

        /// <remarks/>
        public void authenticatePrincipalSimpleAsync(AuthenticatedToken in0, string in1, string in2, object userState)
        {
            if ((this.authenticatePrincipalSimpleOperationCompleted == null))
            {
                this.authenticatePrincipalSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticatePrincipalSimpleOperationCompleted);
            }
            this.InvokeAsync("authenticatePrincipalSimple", new object[] {
                    in0,
                    in1,
                    in2}, this.authenticatePrincipalSimpleOperationCompleted, userState);
        }

        private void OnauthenticatePrincipalSimpleOperationCompleted(object arg)
        {
            if ((this.authenticatePrincipalSimpleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authenticatePrincipalSimpleCompleted(this, new authenticatePrincipalSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeRole([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1)
        {
            this.Invoke("removeRole", new object[] {
                    in0,
                    in1});
        }

        /// <remarks/>
        public System.IAsyncResult BeginremoveRole(AuthenticatedToken in0, string in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("removeRole", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public void EndremoveRole(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void removeRoleAsync(AuthenticatedToken in0, string in1)
        {
            this.removeRoleAsync(in0, in1, null);
        }

        /// <remarks/>
        public void removeRoleAsync(AuthenticatedToken in0, string in1, object userState)
        {
            if ((this.removeRoleOperationCompleted == null))
            {
                this.removeRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveRoleOperationCompleted);
            }
            this.InvokeAsync("removeRole", new object[] {
                    in0,
                    in1}, this.removeRoleOperationCompleted, userState);
        }

        private void OnremoveRoleOperationCompleted(object arg)
        {
            if ((this.removeRoleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable = true)]
        public SOAPCookieInfo getCookieInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0)
        {
            object[] results = this.Invoke("getCookieInfo", new object[] {
                    in0});
            return ((SOAPCookieInfo)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetCookieInfo(AuthenticatedToken in0, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getCookieInfo", new object[] {
                    in0}, callback, asyncState);
        }

        /// <remarks/>
        public SOAPCookieInfo EndgetCookieInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SOAPCookieInfo)(results[0]));
        }

        /// <remarks/>
        public void getCookieInfoAsync(AuthenticatedToken in0)
        {
            this.getCookieInfoAsync(in0, null);
        }

        /// <remarks/>
        public void getCookieInfoAsync(AuthenticatedToken in0, object userState)
        {
            if ((this.getCookieInfoOperationCompleted == null))
            {
                this.getCookieInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCookieInfoOperationCompleted);
            }
            this.InvokeAsync("getCookieInfo", new object[] {
                    in0}, this.getCookieInfoOperationCompleted, userState);
        }

        private void OngetCookieInfoOperationCompleted(object arg)
        {
            if ((this.getCookieInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCookieInfoCompleted(this, new getCookieInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updatePrincipalAttribute([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] SOAPAttribute in2)
        {
            this.Invoke("updatePrincipalAttribute", new object[] {
                    in0,
                    in1,
                    in2});
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdatePrincipalAttribute(AuthenticatedToken in0, string in1, SOAPAttribute in2, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updatePrincipalAttribute", new object[] {
                    in0,
                    in1,
                    in2}, callback, asyncState);
        }

        /// <remarks/>
        public void EndupdatePrincipalAttribute(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void updatePrincipalAttributeAsync(AuthenticatedToken in0, string in1, SOAPAttribute in2)
        {
            this.updatePrincipalAttributeAsync(in0, in1, in2, null);
        }

        /// <remarks/>
        public void updatePrincipalAttributeAsync(AuthenticatedToken in0, string in1, SOAPAttribute in2, object userState)
        {
            if ((this.updatePrincipalAttributeOperationCompleted == null))
            {
                this.updatePrincipalAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePrincipalAttributeOperationCompleted);
            }
            this.InvokeAsync("updatePrincipalAttribute", new object[] {
                    in0,
                    in1,
                    in2}, this.updatePrincipalAttributeOperationCompleted, userState);
        }

        private void OnupdatePrincipalAttributeOperationCompleted(object arg)
        {
            if ((this.updatePrincipalAttributeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePrincipalAttributeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable = true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://soap.integration.crowd.atlassian.com")]
        public SOAPGroup[] searchGroups([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://soap.integration.crowd.atlassian.com")] SearchRestriction[] in1)
        {
            object[] results = this.Invoke("searchGroups", new object[] {
                    in0,
                    in1});
            return ((SOAPGroup[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginsearchGroups(AuthenticatedToken in0, SearchRestriction[] in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("searchGroups", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public SOAPGroup[] EndsearchGroups(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SOAPGroup[])(results[0]));
        }

        /// <remarks/>
        public void searchGroupsAsync(AuthenticatedToken in0, SearchRestriction[] in1)
        {
            this.searchGroupsAsync(in0, in1, null);
        }

        /// <remarks/>
        public void searchGroupsAsync(AuthenticatedToken in0, SearchRestriction[] in1, object userState)
        {
            if ((this.searchGroupsOperationCompleted == null))
            {
                this.searchGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchGroupsOperationCompleted);
            }
            this.InvokeAsync("searchGroups", new object[] {
                    in0,
                    in1}, this.searchGroupsOperationCompleted, userState);
        }

        private void OnsearchGroupsOperationCompleted(object arg)
        {
            if ((this.searchGroupsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchGroupsCompleted(this, new searchGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public long getCacheTime([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0)
        {
            object[] results = this.Invoke("getCacheTime", new object[] {
                    in0});
            return ((long)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetCacheTime(AuthenticatedToken in0, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getCacheTime", new object[] {
                    in0}, callback, asyncState);
        }

        /// <remarks/>
        public long EndgetCacheTime(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((long)(results[0]));
        }

        /// <remarks/>
        public void getCacheTimeAsync(AuthenticatedToken in0)
        {
            this.getCacheTimeAsync(in0, null);
        }

        /// <remarks/>
        public void getCacheTimeAsync(AuthenticatedToken in0, object userState)
        {
            if ((this.getCacheTimeOperationCompleted == null))
            {
                this.getCacheTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCacheTimeOperationCompleted);
            }
            this.InvokeAsync("getCacheTime", new object[] {
                    in0}, this.getCacheTimeOperationCompleted, userState);
        }

        private void OngetCacheTimeOperationCompleted(object arg)
        {
            if ((this.getCacheTimeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCacheTimeCompleted(this, new getCacheTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public bool isRoleMember([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in2)
        {
            object[] results = this.Invoke("isRoleMember", new object[] {
                    in0,
                    in1,
                    in2});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginisRoleMember(AuthenticatedToken in0, string in1, string in2, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("isRoleMember", new object[] {
                    in0,
                    in1,
                    in2}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndisRoleMember(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void isRoleMemberAsync(AuthenticatedToken in0, string in1, string in2)
        {
            this.isRoleMemberAsync(in0, in1, in2, null);
        }

        /// <remarks/>
        public void isRoleMemberAsync(AuthenticatedToken in0, string in1, string in2, object userState)
        {
            if ((this.isRoleMemberOperationCompleted == null))
            {
                this.isRoleMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisRoleMemberOperationCompleted);
            }
            this.InvokeAsync("isRoleMember", new object[] {
                    in0,
                    in1,
                    in2}, this.isRoleMemberOperationCompleted, userState);
        }

        private void OnisRoleMemberOperationCompleted(object arg)
        {
            if ((this.isRoleMemberCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isRoleMemberCompleted(this, new isRoleMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in2, bool in3)
        {
            this.Invoke("updateGroup", new object[] {
                    in0,
                    in1,
                    in2,
                    in3});
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateGroup(AuthenticatedToken in0, string in1, string in2, bool in3, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateGroup", new object[] {
                    in0,
                    in1,
                    in2,
                    in3}, callback, asyncState);
        }

        /// <remarks/>
        public void EndupdateGroup(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void updateGroupAsync(AuthenticatedToken in0, string in1, string in2, bool in3)
        {
            this.updateGroupAsync(in0, in1, in2, in3, null);
        }

        /// <remarks/>
        public void updateGroupAsync(AuthenticatedToken in0, string in1, string in2, bool in3, object userState)
        {
            if ((this.updateGroupOperationCompleted == null))
            {
                this.updateGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateGroupOperationCompleted);
            }
            this.InvokeAsync("updateGroup", new object[] {
                    in0,
                    in1,
                    in2,
                    in3}, this.updateGroupOperationCompleted, userState);
        }

        private void OnupdateGroupOperationCompleted(object arg)
        {
            if ((this.updateGroupCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addAttributeToGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] SOAPAttribute in2)
        {
            this.Invoke("addAttributeToGroup", new object[] {
                    in0,
                    in1,
                    in2});
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddAttributeToGroup(AuthenticatedToken in0, string in1, SOAPAttribute in2, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addAttributeToGroup", new object[] {
                    in0,
                    in1,
                    in2}, callback, asyncState);
        }

        /// <remarks/>
        public void EndaddAttributeToGroup(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void addAttributeToGroupAsync(AuthenticatedToken in0, string in1, SOAPAttribute in2)
        {
            this.addAttributeToGroupAsync(in0, in1, in2, null);
        }

        /// <remarks/>
        public void addAttributeToGroupAsync(AuthenticatedToken in0, string in1, SOAPAttribute in2, object userState)
        {
            if ((this.addAttributeToGroupOperationCompleted == null))
            {
                this.addAttributeToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAttributeToGroupOperationCompleted);
            }
            this.InvokeAsync("addAttributeToGroup", new object[] {
                    in0,
                    in1,
                    in2}, this.addAttributeToGroupOperationCompleted, userState);
        }

        private void OnaddAttributeToGroupOperationCompleted(object arg)
        {
            if ((this.addAttributeToGroupCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAttributeToGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable = true)]
        public string[] findAllRoleNames([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0)
        {
            object[] results = this.Invoke("findAllRoleNames", new object[] {
                    in0});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginfindAllRoleNames(AuthenticatedToken in0, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("findAllRoleNames", new object[] {
                    in0}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndfindAllRoleNames(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void findAllRoleNamesAsync(AuthenticatedToken in0)
        {
            this.findAllRoleNamesAsync(in0, null);
        }

        /// <remarks/>
        public void findAllRoleNamesAsync(AuthenticatedToken in0, object userState)
        {
            if ((this.findAllRoleNamesOperationCompleted == null))
            {
                this.findAllRoleNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindAllRoleNamesOperationCompleted);
            }
            this.InvokeAsync("findAllRoleNames", new object[] {
                    in0}, this.findAllRoleNamesOperationCompleted, userState);
        }

        private void OnfindAllRoleNamesOperationCompleted(object arg)
        {
            if ((this.findAllRoleNamesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findAllRoleNamesCompleted(this, new findAllRoleNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable = true)]
        public SOAPRole findRoleByName([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1)
        {
            object[] results = this.Invoke("findRoleByName", new object[] {
                    in0,
                    in1});
            return ((SOAPRole)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginfindRoleByName(AuthenticatedToken in0, string in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("findRoleByName", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public SOAPRole EndfindRoleByName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SOAPRole)(results[0]));
        }

        /// <remarks/>
        public void findRoleByNameAsync(AuthenticatedToken in0, string in1)
        {
            this.findRoleByNameAsync(in0, in1, null);
        }

        /// <remarks/>
        public void findRoleByNameAsync(AuthenticatedToken in0, string in1, object userState)
        {
            if ((this.findRoleByNameOperationCompleted == null))
            {
                this.findRoleByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindRoleByNameOperationCompleted);
            }
            this.InvokeAsync("findRoleByName", new object[] {
                    in0,
                    in1}, this.findRoleByNameOperationCompleted, userState);
        }

        private void OnfindRoleByNameOperationCompleted(object arg)
        {
            if ((this.findRoleByNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findRoleByNameCompleted(this, new findRoleByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public bool isCacheEnabled([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0)
        {
            object[] results = this.Invoke("isCacheEnabled", new object[] {
                    in0});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginisCacheEnabled(AuthenticatedToken in0, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("isCacheEnabled", new object[] {
                    in0}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndisCacheEnabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void isCacheEnabledAsync(AuthenticatedToken in0)
        {
            this.isCacheEnabledAsync(in0, null);
        }

        /// <remarks/>
        public void isCacheEnabledAsync(AuthenticatedToken in0, object userState)
        {
            if ((this.isCacheEnabledOperationCompleted == null))
            {
                this.isCacheEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisCacheEnabledOperationCompleted);
            }
            this.InvokeAsync("isCacheEnabled", new object[] {
                    in0}, this.isCacheEnabledOperationCompleted, userState);
        }

        private void OnisCacheEnabledOperationCompleted(object arg)
        {
            if ((this.isCacheEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isCacheEnabledCompleted(this, new isCacheEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable = true)]
        public SOAPGroup findGroupByName([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1)
        {
            object[] results = this.Invoke("findGroupByName", new object[] {
                    in0,
                    in1});
            return ((SOAPGroup)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginfindGroupByName(AuthenticatedToken in0, string in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("findGroupByName", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public SOAPGroup EndfindGroupByName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SOAPGroup)(results[0]));
        }

        /// <remarks/>
        public void findGroupByNameAsync(AuthenticatedToken in0, string in1)
        {
            this.findGroupByNameAsync(in0, in1, null);
        }

        /// <remarks/>
        public void findGroupByNameAsync(AuthenticatedToken in0, string in1, object userState)
        {
            if ((this.findGroupByNameOperationCompleted == null))
            {
                this.findGroupByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindGroupByNameOperationCompleted);
            }
            this.InvokeAsync("findGroupByName", new object[] {
                    in0,
                    in1}, this.findGroupByNameOperationCompleted, userState);
        }

        private void OnfindGroupByNameOperationCompleted(object arg)
        {
            if ((this.findGroupByNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findGroupByNameCompleted(this, new findGroupByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable = true)]
        public SOAPGroup findGroupWithAttributesByName([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1)
        {
            object[] results = this.Invoke("findGroupWithAttributesByName", new object[] {
                    in0,
                    in1});
            return ((SOAPGroup)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginfindGroupWithAttributesByName(AuthenticatedToken in0, string in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("findGroupWithAttributesByName", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public SOAPGroup EndfindGroupWithAttributesByName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SOAPGroup)(results[0]));
        }

        /// <remarks/>
        public void findGroupWithAttributesByNameAsync(AuthenticatedToken in0, string in1)
        {
            this.findGroupWithAttributesByNameAsync(in0, in1, null);
        }

        /// <remarks/>
        public void findGroupWithAttributesByNameAsync(AuthenticatedToken in0, string in1, object userState)
        {
            if ((this.findGroupWithAttributesByNameOperationCompleted == null))
            {
                this.findGroupWithAttributesByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindGroupWithAttributesByNameOperationCompleted);
            }
            this.InvokeAsync("findGroupWithAttributesByName", new object[] {
                    in0,
                    in1}, this.findGroupWithAttributesByNameOperationCompleted, userState);
        }

        private void OnfindGroupWithAttributesByNameOperationCompleted(object arg)
        {
            if ((this.findGroupWithAttributesByNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findGroupWithAttributesByNameCompleted(this, new findGroupWithAttributesByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removePrincipalFromRole([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in2)
        {
            this.Invoke("removePrincipalFromRole", new object[] {
                    in0,
                    in1,
                    in2});
        }

        /// <remarks/>
        public System.IAsyncResult BeginremovePrincipalFromRole(AuthenticatedToken in0, string in1, string in2, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("removePrincipalFromRole", new object[] {
                    in0,
                    in1,
                    in2}, callback, asyncState);
        }

        /// <remarks/>
        public void EndremovePrincipalFromRole(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void removePrincipalFromRoleAsync(AuthenticatedToken in0, string in1, string in2)
        {
            this.removePrincipalFromRoleAsync(in0, in1, in2, null);
        }

        /// <remarks/>
        public void removePrincipalFromRoleAsync(AuthenticatedToken in0, string in1, string in2, object userState)
        {
            if ((this.removePrincipalFromRoleOperationCompleted == null))
            {
                this.removePrincipalFromRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremovePrincipalFromRoleOperationCompleted);
            }
            this.InvokeAsync("removePrincipalFromRole", new object[] {
                    in0,
                    in1,
                    in2}, this.removePrincipalFromRoleOperationCompleted, userState);
        }

        private void OnremovePrincipalFromRoleOperationCompleted(object arg)
        {
            if ((this.removePrincipalFromRoleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removePrincipalFromRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable = true)]
        public SOAPPrincipal findPrincipalWithAttributesByName([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1)
        {
            object[] results = this.Invoke("findPrincipalWithAttributesByName", new object[] {
                    in0,
                    in1});
            return ((SOAPPrincipal)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginfindPrincipalWithAttributesByName(AuthenticatedToken in0, string in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("findPrincipalWithAttributesByName", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public SOAPPrincipal EndfindPrincipalWithAttributesByName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SOAPPrincipal)(results[0]));
        }

        /// <remarks/>
        public void findPrincipalWithAttributesByNameAsync(AuthenticatedToken in0, string in1)
        {
            this.findPrincipalWithAttributesByNameAsync(in0, in1, null);
        }

        /// <remarks/>
        public void findPrincipalWithAttributesByNameAsync(AuthenticatedToken in0, string in1, object userState)
        {
            if ((this.findPrincipalWithAttributesByNameOperationCompleted == null))
            {
                this.findPrincipalWithAttributesByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindPrincipalWithAttributesByNameOperationCompleted);
            }
            this.InvokeAsync("findPrincipalWithAttributesByName", new object[] {
                    in0,
                    in1}, this.findPrincipalWithAttributesByNameOperationCompleted, userState);
        }

        private void OnfindPrincipalWithAttributesByNameOperationCompleted(object arg)
        {
            if ((this.findPrincipalWithAttributesByNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findPrincipalWithAttributesByNameCompleted(this, new findPrincipalWithAttributesByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable = true)]
        public string authenticatePrincipal([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] UserAuthenticationContext in1)
        {
            object[] results = this.Invoke("authenticatePrincipal", new object[] {
                    in0,
                    in1});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginauthenticatePrincipal(AuthenticatedToken in0, UserAuthenticationContext in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("authenticatePrincipal", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public string EndauthenticatePrincipal(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void authenticatePrincipalAsync(AuthenticatedToken in0, UserAuthenticationContext in1)
        {
            this.authenticatePrincipalAsync(in0, in1, null);
        }

        /// <remarks/>
        public void authenticatePrincipalAsync(AuthenticatedToken in0, UserAuthenticationContext in1, object userState)
        {
            if ((this.authenticatePrincipalOperationCompleted == null))
            {
                this.authenticatePrincipalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticatePrincipalOperationCompleted);
            }
            this.InvokeAsync("authenticatePrincipal", new object[] {
                    in0,
                    in1}, this.authenticatePrincipalOperationCompleted, userState);
        }

        private void OnauthenticatePrincipalOperationCompleted(object arg)
        {
            if ((this.authenticatePrincipalCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authenticatePrincipalCompleted(this, new authenticatePrincipalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable = true)]
        public string[] findGroupMemberships([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1)
        {
            object[] results = this.Invoke("findGroupMemberships", new object[] {
                    in0,
                    in1});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginfindGroupMemberships(AuthenticatedToken in0, string in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("findGroupMemberships", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndfindGroupMemberships(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void findGroupMembershipsAsync(AuthenticatedToken in0, string in1)
        {
            this.findGroupMembershipsAsync(in0, in1, null);
        }

        /// <remarks/>
        public void findGroupMembershipsAsync(AuthenticatedToken in0, string in1, object userState)
        {
            if ((this.findGroupMembershipsOperationCompleted == null))
            {
                this.findGroupMembershipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindGroupMembershipsOperationCompleted);
            }
            this.InvokeAsync("findGroupMemberships", new object[] {
                    in0,
                    in1}, this.findGroupMembershipsOperationCompleted, userState);
        }

        private void OnfindGroupMembershipsOperationCompleted(object arg)
        {
            if ((this.findGroupMembershipsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findGroupMembershipsCompleted(this, new findGroupMembershipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addPrincipalToGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in2)
        {
            this.Invoke("addPrincipalToGroup", new object[] {
                    in0,
                    in1,
                    in2});
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddPrincipalToGroup(AuthenticatedToken in0, string in1, string in2, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addPrincipalToGroup", new object[] {
                    in0,
                    in1,
                    in2}, callback, asyncState);
        }

        /// <remarks/>
        public void EndaddPrincipalToGroup(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void addPrincipalToGroupAsync(AuthenticatedToken in0, string in1, string in2)
        {
            this.addPrincipalToGroupAsync(in0, in1, in2, null);
        }

        /// <remarks/>
        public void addPrincipalToGroupAsync(AuthenticatedToken in0, string in1, string in2, object userState)
        {
            if ((this.addPrincipalToGroupOperationCompleted == null))
            {
                this.addPrincipalToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPrincipalToGroupOperationCompleted);
            }
            this.InvokeAsync("addPrincipalToGroup", new object[] {
                    in0,
                    in1,
                    in2}, this.addPrincipalToGroupOperationCompleted, userState);
        }

        private void OnaddPrincipalToGroupOperationCompleted(object arg)
        {
            if ((this.addPrincipalToGroupCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPrincipalToGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1)
        {
            this.Invoke("removeGroup", new object[] {
                    in0,
                    in1});
        }

        /// <remarks/>
        public System.IAsyncResult BeginremoveGroup(AuthenticatedToken in0, string in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("removeGroup", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public void EndremoveGroup(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void removeGroupAsync(AuthenticatedToken in0, string in1)
        {
            this.removeGroupAsync(in0, in1, null);
        }

        /// <remarks/>
        public void removeGroupAsync(AuthenticatedToken in0, string in1, object userState)
        {
            if ((this.removeGroupOperationCompleted == null))
            {
                this.removeGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveGroupOperationCompleted);
            }
            this.InvokeAsync("removeGroup", new object[] {
                    in0,
                    in1}, this.removeGroupOperationCompleted, userState);
        }

        private void OnremoveGroupOperationCompleted(object arg)
        {
            if ((this.removeGroupCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeAttributeFromGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in2)
        {
            this.Invoke("removeAttributeFromGroup", new object[] {
                    in0,
                    in1,
                    in2});
        }

        /// <remarks/>
        public System.IAsyncResult BeginremoveAttributeFromGroup(AuthenticatedToken in0, string in1, string in2, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("removeAttributeFromGroup", new object[] {
                    in0,
                    in1,
                    in2}, callback, asyncState);
        }

        /// <remarks/>
        public void EndremoveAttributeFromGroup(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void removeAttributeFromGroupAsync(AuthenticatedToken in0, string in1, string in2)
        {
            this.removeAttributeFromGroupAsync(in0, in1, in2, null);
        }

        /// <remarks/>
        public void removeAttributeFromGroupAsync(AuthenticatedToken in0, string in1, string in2, object userState)
        {
            if ((this.removeAttributeFromGroupOperationCompleted == null))
            {
                this.removeAttributeFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveAttributeFromGroupOperationCompleted);
            }
            this.InvokeAsync("removeAttributeFromGroup", new object[] {
                    in0,
                    in1,
                    in2}, this.removeAttributeFromGroupOperationCompleted, userState);
        }

        private void OnremoveAttributeFromGroupOperationCompleted(object arg)
        {
            if ((this.removeAttributeFromGroupCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeAttributeFromGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addAllPrincipals([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://soap.integration.crowd.atlassian.com")] SOAPPrincipalWithCredential[] in1)
        {
            this.Invoke("addAllPrincipals", new object[] {
                    in0,
                    in1});
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddAllPrincipals(AuthenticatedToken in0, SOAPPrincipalWithCredential[] in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addAllPrincipals", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public void EndaddAllPrincipals(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void addAllPrincipalsAsync(AuthenticatedToken in0, SOAPPrincipalWithCredential[] in1)
        {
            this.addAllPrincipalsAsync(in0, in1, null);
        }

        /// <remarks/>
        public void addAllPrincipalsAsync(AuthenticatedToken in0, SOAPPrincipalWithCredential[] in1, object userState)
        {
            if ((this.addAllPrincipalsOperationCompleted == null))
            {
                this.addAllPrincipalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAllPrincipalsOperationCompleted);
            }
            this.InvokeAsync("addAllPrincipals", new object[] {
                    in0,
                    in1}, this.addAllPrincipalsOperationCompleted, userState);
        }

        private void OnaddAllPrincipalsOperationCompleted(object arg)
        {
            if ((this.addAllPrincipalsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAllPrincipalsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeAttributeFromPrincipal([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in2)
        {
            this.Invoke("removeAttributeFromPrincipal", new object[] {
                    in0,
                    in1,
                    in2});
        }

        /// <remarks/>
        public System.IAsyncResult BeginremoveAttributeFromPrincipal(AuthenticatedToken in0, string in1, string in2, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("removeAttributeFromPrincipal", new object[] {
                    in0,
                    in1,
                    in2}, callback, asyncState);
        }

        /// <remarks/>
        public void EndremoveAttributeFromPrincipal(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void removeAttributeFromPrincipalAsync(AuthenticatedToken in0, string in1, string in2)
        {
            this.removeAttributeFromPrincipalAsync(in0, in1, in2, null);
        }

        /// <remarks/>
        public void removeAttributeFromPrincipalAsync(AuthenticatedToken in0, string in1, string in2, object userState)
        {
            if ((this.removeAttributeFromPrincipalOperationCompleted == null))
            {
                this.removeAttributeFromPrincipalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveAttributeFromPrincipalOperationCompleted);
            }
            this.InvokeAsync("removeAttributeFromPrincipal", new object[] {
                    in0,
                    in1,
                    in2}, this.removeAttributeFromPrincipalOperationCompleted, userState);
        }

        private void OnremoveAttributeFromPrincipalOperationCompleted(object arg)
        {
            if ((this.removeAttributeFromPrincipalCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeAttributeFromPrincipalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable = true)]
        public SOAPRole addRole([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] SOAPRole in1)
        {
            object[] results = this.Invoke("addRole", new object[] {
                    in0,
                    in1});
            return ((SOAPRole)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddRole(AuthenticatedToken in0, SOAPRole in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addRole", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public SOAPRole EndaddRole(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SOAPRole)(results[0]));
        }

        /// <remarks/>
        public void addRoleAsync(AuthenticatedToken in0, SOAPRole in1)
        {
            this.addRoleAsync(in0, in1, null);
        }

        /// <remarks/>
        public void addRoleAsync(AuthenticatedToken in0, SOAPRole in1, object userState)
        {
            if ((this.addRoleOperationCompleted == null))
            {
                this.addRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddRoleOperationCompleted);
            }
            this.InvokeAsync("addRole", new object[] {
                    in0,
                    in1}, this.addRoleOperationCompleted, userState);
        }

        private void OnaddRoleOperationCompleted(object arg)
        {
            if ((this.addRoleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addRoleCompleted(this, new addRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable = true)]
        public string[] findAllPrincipalNames([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0)
        {
            object[] results = this.Invoke("findAllPrincipalNames", new object[] {
                    in0});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginfindAllPrincipalNames(AuthenticatedToken in0, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("findAllPrincipalNames", new object[] {
                    in0}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndfindAllPrincipalNames(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void findAllPrincipalNamesAsync(AuthenticatedToken in0)
        {
            this.findAllPrincipalNamesAsync(in0, null);
        }

        /// <remarks/>
        public void findAllPrincipalNamesAsync(AuthenticatedToken in0, object userState)
        {
            if ((this.findAllPrincipalNamesOperationCompleted == null))
            {
                this.findAllPrincipalNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindAllPrincipalNamesOperationCompleted);
            }
            this.InvokeAsync("findAllPrincipalNames", new object[] {
                    in0}, this.findAllPrincipalNamesOperationCompleted, userState);
        }

        private void OnfindAllPrincipalNamesOperationCompleted(object arg)
        {
            if ((this.findAllPrincipalNamesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findAllPrincipalNamesCompleted(this, new findAllPrincipalNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable = true)]
        public string createPrincipalToken([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1, [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://authentication.integration.crowd.atlassian.com")] ValidationFactor[] in2)
        {
            object[] results = this.Invoke("createPrincipalToken", new object[] {
                    in0,
                    in1,
                    in2});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegincreatePrincipalToken(AuthenticatedToken in0, string in1, ValidationFactor[] in2, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("createPrincipalToken", new object[] {
                    in0,
                    in1,
                    in2}, callback, asyncState);
        }

        /// <remarks/>
        public string EndcreatePrincipalToken(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void createPrincipalTokenAsync(AuthenticatedToken in0, string in1, ValidationFactor[] in2)
        {
            this.createPrincipalTokenAsync(in0, in1, in2, null);
        }

        /// <remarks/>
        public void createPrincipalTokenAsync(AuthenticatedToken in0, string in1, ValidationFactor[] in2, object userState)
        {
            if ((this.createPrincipalTokenOperationCompleted == null))
            {
                this.createPrincipalTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePrincipalTokenOperationCompleted);
            }
            this.InvokeAsync("createPrincipalToken", new object[] {
                    in0,
                    in1,
                    in2}, this.createPrincipalTokenOperationCompleted, userState);
        }

        private void OncreatePrincipalTokenOperationCompleted(object arg)
        {
            if ((this.createPrincipalTokenCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPrincipalTokenCompleted(this, new createPrincipalTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable = true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://soap.integration.crowd.atlassian.com")]
        public SOAPRole[] searchRoles([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://soap.integration.crowd.atlassian.com")] SearchRestriction[] in1)
        {
            object[] results = this.Invoke("searchRoles", new object[] {
                    in0,
                    in1});
            return ((SOAPRole[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginsearchRoles(AuthenticatedToken in0, SearchRestriction[] in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("searchRoles", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public SOAPRole[] EndsearchRoles(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SOAPRole[])(results[0]));
        }

        /// <remarks/>
        public void searchRolesAsync(AuthenticatedToken in0, SearchRestriction[] in1)
        {
            this.searchRolesAsync(in0, in1, null);
        }

        /// <remarks/>
        public void searchRolesAsync(AuthenticatedToken in0, SearchRestriction[] in1, object userState)
        {
            if ((this.searchRolesOperationCompleted == null))
            {
                this.searchRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchRolesOperationCompleted);
            }
            this.InvokeAsync("searchRoles", new object[] {
                    in0,
                    in1}, this.searchRolesOperationCompleted, userState);
        }

        private void OnsearchRolesOperationCompleted(object arg)
        {
            if ((this.searchRolesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchRolesCompleted(this, new searchRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removePrincipalFromGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in2)
        {
            this.Invoke("removePrincipalFromGroup", new object[] {
                    in0,
                    in1,
                    in2});
        }

        /// <remarks/>
        public System.IAsyncResult BeginremovePrincipalFromGroup(AuthenticatedToken in0, string in1, string in2, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("removePrincipalFromGroup", new object[] {
                    in0,
                    in1,
                    in2}, callback, asyncState);
        }

        /// <remarks/>
        public void EndremovePrincipalFromGroup(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void removePrincipalFromGroupAsync(AuthenticatedToken in0, string in1, string in2)
        {
            this.removePrincipalFromGroupAsync(in0, in1, in2, null);
        }

        /// <remarks/>
        public void removePrincipalFromGroupAsync(AuthenticatedToken in0, string in1, string in2, object userState)
        {
            if ((this.removePrincipalFromGroupOperationCompleted == null))
            {
                this.removePrincipalFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremovePrincipalFromGroupOperationCompleted);
            }
            this.InvokeAsync("removePrincipalFromGroup", new object[] {
                    in0,
                    in1,
                    in2}, this.removePrincipalFromGroupOperationCompleted, userState);
        }

        private void OnremovePrincipalFromGroupOperationCompleted(object arg)
        {
            if ((this.removePrincipalFromGroupCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removePrincipalFromGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable = true)]
        public SOAPPrincipal findPrincipalByName([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1)
        {
            object[] results = this.Invoke("findPrincipalByName", new object[] {
                    in0,
                    in1});
            return ((SOAPPrincipal)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginfindPrincipalByName(AuthenticatedToken in0, string in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("findPrincipalByName", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public SOAPPrincipal EndfindPrincipalByName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SOAPPrincipal)(results[0]));
        }

        /// <remarks/>
        public void findPrincipalByNameAsync(AuthenticatedToken in0, string in1)
        {
            this.findPrincipalByNameAsync(in0, in1, null);
        }

        /// <remarks/>
        public void findPrincipalByNameAsync(AuthenticatedToken in0, string in1, object userState)
        {
            if ((this.findPrincipalByNameOperationCompleted == null))
            {
                this.findPrincipalByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindPrincipalByNameOperationCompleted);
            }
            this.InvokeAsync("findPrincipalByName", new object[] {
                    in0,
                    in1}, this.findPrincipalByNameOperationCompleted, userState);
        }

        private void OnfindPrincipalByNameOperationCompleted(object arg)
        {
            if ((this.findPrincipalByNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findPrincipalByNameCompleted(this, new findPrincipalByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void resetPrincipalCredential([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1)
        {
            this.Invoke("resetPrincipalCredential", new object[] {
                    in0,
                    in1});
        }

        /// <remarks/>
        public System.IAsyncResult BeginresetPrincipalCredential(AuthenticatedToken in0, string in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("resetPrincipalCredential", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public void EndresetPrincipalCredential(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void resetPrincipalCredentialAsync(AuthenticatedToken in0, string in1)
        {
            this.resetPrincipalCredentialAsync(in0, in1, null);
        }

        /// <remarks/>
        public void resetPrincipalCredentialAsync(AuthenticatedToken in0, string in1, object userState)
        {
            if ((this.resetPrincipalCredentialOperationCompleted == null))
            {
                this.resetPrincipalCredentialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresetPrincipalCredentialOperationCompleted);
            }
            this.InvokeAsync("resetPrincipalCredential", new object[] {
                    in0,
                    in1}, this.resetPrincipalCredentialOperationCompleted, userState);
        }

        private void OnresetPrincipalCredentialOperationCompleted(object arg)
        {
            if ((this.resetPrincipalCredentialCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resetPrincipalCredentialCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateGroupAttribute([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] SOAPAttribute in2)
        {
            this.Invoke("updateGroupAttribute", new object[] {
                    in0,
                    in1,
                    in2});
        }

        /// <remarks/>
        public System.IAsyncResult BeginupdateGroupAttribute(AuthenticatedToken in0, string in1, SOAPAttribute in2, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("updateGroupAttribute", new object[] {
                    in0,
                    in1,
                    in2}, callback, asyncState);
        }

        /// <remarks/>
        public void EndupdateGroupAttribute(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void updateGroupAttributeAsync(AuthenticatedToken in0, string in1, SOAPAttribute in2)
        {
            this.updateGroupAttributeAsync(in0, in1, in2, null);
        }

        /// <remarks/>
        public void updateGroupAttributeAsync(AuthenticatedToken in0, string in1, SOAPAttribute in2, object userState)
        {
            if ((this.updateGroupAttributeOperationCompleted == null))
            {
                this.updateGroupAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateGroupAttributeOperationCompleted);
            }
            this.InvokeAsync("updateGroupAttribute", new object[] {
                    in0,
                    in1,
                    in2}, this.updateGroupAttributeOperationCompleted, userState);
        }

        private void OnupdateGroupAttributeOperationCompleted(object arg)
        {
            if ((this.updateGroupAttributeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateGroupAttributeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public bool isGroupMember([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string in2)
        {
            object[] results = this.Invoke("isGroupMember", new object[] {
                    in0,
                    in1,
                    in2});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginisGroupMember(AuthenticatedToken in0, string in1, string in2, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("isGroupMember", new object[] {
                    in0,
                    in1,
                    in2}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndisGroupMember(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void isGroupMemberAsync(AuthenticatedToken in0, string in1, string in2)
        {
            this.isGroupMemberAsync(in0, in1, in2, null);
        }

        /// <remarks/>
        public void isGroupMemberAsync(AuthenticatedToken in0, string in1, string in2, object userState)
        {
            if ((this.isGroupMemberOperationCompleted == null))
            {
                this.isGroupMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisGroupMemberOperationCompleted);
            }
            this.InvokeAsync("isGroupMember", new object[] {
                    in0,
                    in1,
                    in2}, this.isGroupMemberOperationCompleted, userState);
        }

        private void OnisGroupMemberOperationCompleted(object arg)
        {
            if ((this.isGroupMemberCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isGroupMemberCompleted(this, new isGroupMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable = true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://soap.integration.crowd.atlassian.com")]
        public SOAPPrincipal[] searchPrincipals([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0, [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://soap.integration.crowd.atlassian.com")] SearchRestriction[] in1)
        {
            object[] results = this.Invoke("searchPrincipals", new object[] {
                    in0,
                    in1});
            return ((SOAPPrincipal[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginsearchPrincipals(AuthenticatedToken in0, SearchRestriction[] in1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("searchPrincipals", new object[] {
                    in0,
                    in1}, callback, asyncState);
        }

        /// <remarks/>
        public SOAPPrincipal[] EndsearchPrincipals(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SOAPPrincipal[])(results[0]));
        }

        /// <remarks/>
        public void searchPrincipalsAsync(AuthenticatedToken in0, SearchRestriction[] in1)
        {
            this.searchPrincipalsAsync(in0, in1, null);
        }

        /// <remarks/>
        public void searchPrincipalsAsync(AuthenticatedToken in0, SearchRestriction[] in1, object userState)
        {
            if ((this.searchPrincipalsOperationCompleted == null))
            {
                this.searchPrincipalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchPrincipalsOperationCompleted);
            }
            this.InvokeAsync("searchPrincipals", new object[] {
                    in0,
                    in1}, this.searchPrincipalsOperationCompleted, userState);
        }

        private void OnsearchPrincipalsOperationCompleted(object arg)
        {
            if ((this.searchPrincipalsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchPrincipalsCompleted(this, new searchPrincipalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable = true)]
        public string getDomain([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] AuthenticatedToken in0)
        {
            object[] results = this.Invoke("getDomain", new object[] {
                    in0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetDomain(AuthenticatedToken in0, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getDomain", new object[] {
                    in0}, callback, asyncState);
        }

        /// <remarks/>
        public string EndgetDomain(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getDomainAsync(AuthenticatedToken in0)
        {
            this.getDomainAsync(in0, null);
        }

        /// <remarks/>
        public void getDomainAsync(AuthenticatedToken in0, object userState)
        {
            if ((this.getDomainOperationCompleted == null))
            {
                this.getDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDomainOperationCompleted);
            }
            this.InvokeAsync("getDomain", new object[] {
                    in0}, this.getDomainOperationCompleted, userState);
        }

        private void OngetDomainOperationCompleted(object arg)
        {
            if ((this.getDomainCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDomainCompleted(this, new getDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:SecurityServer", ResponseNamespace = "urn:SecurityServer", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable = true)]
        public AuthenticatedToken authenticateApplication([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] ApplicationAuthenticationContext in0)
        {
            object[] results = this.Invoke("authenticateApplication", new object[] {
                    in0});
            return ((AuthenticatedToken)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginauthenticateApplication(ApplicationAuthenticationContext in0, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("authenticateApplication", new object[] {
                    in0}, callback, asyncState);
        }

        /// <remarks/>
        public AuthenticatedToken EndauthenticateApplication(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((AuthenticatedToken)(results[0]));
        }

        /// <remarks/>
        public void authenticateApplicationAsync(ApplicationAuthenticationContext in0)
        {
            this.authenticateApplicationAsync(in0, null);
        }

        /// <remarks/>
        public void authenticateApplicationAsync(ApplicationAuthenticationContext in0, object userState)
        {
            if ((this.authenticateApplicationOperationCompleted == null))
            {
                this.authenticateApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticateApplicationOperationCompleted);
            }
            this.InvokeAsync("authenticateApplication", new object[] {
                    in0}, this.authenticateApplicationOperationCompleted, userState);
        }

        private void OnauthenticateApplicationOperationCompleted(object arg)
        {
            if ((this.authenticateApplicationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authenticateApplicationCompleted(this, new authenticateApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://authentication.integration.crowd.atlassian.com")]
    public partial class AuthenticatedToken
    {

        private string nameField;

        private string tokenField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string token
        {
            get
            {
                return this.tokenField;
            }
            set
            {
                this.tokenField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://authentication.integration.crowd.atlassian.com")]
    public partial class ApplicationAuthenticationContext
    {

        private PasswordCredential credentialField;

        private string nameField;

        private ValidationFactor[] validationFactorsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public PasswordCredential credential
        {
            get
            {
                return this.credentialField;
            }
            set
            {
                this.credentialField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
        public ValidationFactor[] validationFactors
        {
            get
            {
                return this.validationFactorsField;
            }
            set
            {
                this.validationFactorsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://authentication.integration.crowd.atlassian.com")]
    public partial class PasswordCredential
    {

        private string credentialField;

        private bool encryptedCredentialField;

        private bool encryptedCredentialFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string credential
        {
            get
            {
                return this.credentialField;
            }
            set
            {
                this.credentialField = value;
            }
        }

        /// <remarks/>
        public bool encryptedCredential
        {
            get
            {
                return this.encryptedCredentialField;
            }
            set
            {
                this.encryptedCredentialField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool encryptedCredentialSpecified
        {
            get
            {
                return this.encryptedCredentialFieldSpecified;
            }
            set
            {
                this.encryptedCredentialFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://authentication.integration.crowd.atlassian.com")]
    public partial class ValidationFactor
    {

        private string nameField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://soap.integration.crowd.atlassian.com")]
    public partial class SOAPPrincipalWithCredential
    {

        private PasswordCredential passwordCredentialField;

        private SOAPPrincipal principalField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public PasswordCredential passwordCredential
        {
            get
            {
                return this.passwordCredentialField;
            }
            set
            {
                this.passwordCredentialField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public SOAPPrincipal principal
        {
            get
            {
                return this.principalField;
            }
            set
            {
                this.principalField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://soap.integration.crowd.atlassian.com")]
    public partial class SOAPPrincipal
    {

        private long idField;

        private bool idFieldSpecified;

        private bool activeField;

        private bool activeFieldSpecified;

        private SOAPAttribute[] attributesField;

        private System.DateTime conceptionField;

        private bool conceptionFieldSpecified;

        private string descriptionField;

        private long directoryIdField;

        private bool directoryIdFieldSpecified;

        private System.DateTime lastModifiedField;

        private bool lastModifiedFieldSpecified;

        private string nameField;

        /// <remarks/>
        public long ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified
        {
            get
            {
                return this.idFieldSpecified;
            }
            set
            {
                this.idFieldSpecified = value;
            }
        }

        /// <remarks/>
        public bool active
        {
            get
            {
                return this.activeField;
            }
            set
            {
                this.activeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activeSpecified
        {
            get
            {
                return this.activeFieldSpecified;
            }
            set
            {
                this.activeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
        public SOAPAttribute[] attributes
        {
            get
            {
                return this.attributesField;
            }
            set
            {
                this.attributesField = value;
            }
        }

        /// <remarks/>
        public System.DateTime conception
        {
            get
            {
                return this.conceptionField;
            }
            set
            {
                this.conceptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool conceptionSpecified
        {
            get
            {
                return this.conceptionFieldSpecified;
            }
            set
            {
                this.conceptionFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public long directoryId
        {
            get
            {
                return this.directoryIdField;
            }
            set
            {
                this.directoryIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool directoryIdSpecified
        {
            get
            {
                return this.directoryIdFieldSpecified;
            }
            set
            {
                this.directoryIdFieldSpecified = value;
            }
        }

        /// <remarks/>
        public System.DateTime lastModified
        {
            get
            {
                return this.lastModifiedField;
            }
            set
            {
                this.lastModifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastModifiedSpecified
        {
            get
            {
                return this.lastModifiedFieldSpecified;
            }
            set
            {
                this.lastModifiedFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://soap.integration.crowd.atlassian.com")]
    public partial class SOAPAttribute
    {

        private string nameField;

        private string[] valuesField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "urn:SecurityServer")]
        public string[] values
        {
            get
            {
                return this.valuesField;
            }
            set
            {
                this.valuesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://authentication.integration.crowd.atlassian.com")]
    public partial class UserAuthenticationContext
    {

        private string applicationField;

        private PasswordCredential credentialField;

        private string nameField;

        private ValidationFactor[] validationFactorsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string application
        {
            get
            {
                return this.applicationField;
            }
            set
            {
                this.applicationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public PasswordCredential credential
        {
            get
            {
                return this.credentialField;
            }
            set
            {
                this.credentialField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
        public ValidationFactor[] validationFactors
        {
            get
            {
                return this.validationFactorsField;
            }
            set
            {
                this.validationFactorsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://soap.integration.crowd.atlassian.com")]
    public partial class SOAPRole
    {

        private long idField;

        private bool idFieldSpecified;

        private bool activeField;

        private bool activeFieldSpecified;

        private SOAPAttribute[] attributesField;

        private System.DateTime conceptionField;

        private bool conceptionFieldSpecified;

        private string descriptionField;

        private long directoryIdField;

        private bool directoryIdFieldSpecified;

        private System.DateTime lastModifiedField;

        private bool lastModifiedFieldSpecified;

        private string[] membersField;

        private string nameField;

        /// <remarks/>
        public long ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified
        {
            get
            {
                return this.idFieldSpecified;
            }
            set
            {
                this.idFieldSpecified = value;
            }
        }

        /// <remarks/>
        public bool active
        {
            get
            {
                return this.activeField;
            }
            set
            {
                this.activeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activeSpecified
        {
            get
            {
                return this.activeFieldSpecified;
            }
            set
            {
                this.activeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
        public SOAPAttribute[] attributes
        {
            get
            {
                return this.attributesField;
            }
            set
            {
                this.attributesField = value;
            }
        }

        /// <remarks/>
        public System.DateTime conception
        {
            get
            {
                return this.conceptionField;
            }
            set
            {
                this.conceptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool conceptionSpecified
        {
            get
            {
                return this.conceptionFieldSpecified;
            }
            set
            {
                this.conceptionFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public long directoryId
        {
            get
            {
                return this.directoryIdField;
            }
            set
            {
                this.directoryIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool directoryIdSpecified
        {
            get
            {
                return this.directoryIdFieldSpecified;
            }
            set
            {
                this.directoryIdFieldSpecified = value;
            }
        }

        /// <remarks/>
        public System.DateTime lastModified
        {
            get
            {
                return this.lastModifiedField;
            }
            set
            {
                this.lastModifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastModifiedSpecified
        {
            get
            {
                return this.lastModifiedFieldSpecified;
            }
            set
            {
                this.lastModifiedFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "urn:SecurityServer")]
        public string[] members
        {
            get
            {
                return this.membersField;
            }
            set
            {
                this.membersField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://soap.integration.crowd.atlassian.com")]
    public partial class SearchRestriction
    {

        private string nameField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://soap.integration.crowd.atlassian.com")]
    public partial class SOAPCookieInfo
    {

        private string domainField;

        private bool secureField;

        private bool secureFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string domain
        {
            get
            {
                return this.domainField;
            }
            set
            {
                this.domainField = value;
            }
        }

        /// <remarks/>
        public bool secure
        {
            get
            {
                return this.secureField;
            }
            set
            {
                this.secureField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool secureSpecified
        {
            get
            {
                return this.secureFieldSpecified;
            }
            set
            {
                this.secureFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://soap.integration.crowd.atlassian.com")]
    public partial class SOAPGroup
    {

        private long idField;

        private bool idFieldSpecified;

        private bool activeField;

        private bool activeFieldSpecified;

        private SOAPAttribute[] attributesField;

        private System.DateTime conceptionField;

        private bool conceptionFieldSpecified;

        private string descriptionField;

        private long directoryIdField;

        private bool directoryIdFieldSpecified;

        private System.DateTime lastModifiedField;

        private bool lastModifiedFieldSpecified;

        private string[] membersField;

        private string nameField;

        /// <remarks/>
        public long ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified
        {
            get
            {
                return this.idFieldSpecified;
            }
            set
            {
                this.idFieldSpecified = value;
            }
        }

        /// <remarks/>
        public bool active
        {
            get
            {
                return this.activeField;
            }
            set
            {
                this.activeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activeSpecified
        {
            get
            {
                return this.activeFieldSpecified;
            }
            set
            {
                this.activeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
        public SOAPAttribute[] attributes
        {
            get
            {
                return this.attributesField;
            }
            set
            {
                this.attributesField = value;
            }
        }

        /// <remarks/>
        public System.DateTime conception
        {
            get
            {
                return this.conceptionField;
            }
            set
            {
                this.conceptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool conceptionSpecified
        {
            get
            {
                return this.conceptionFieldSpecified;
            }
            set
            {
                this.conceptionFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public long directoryId
        {
            get
            {
                return this.directoryIdField;
            }
            set
            {
                this.directoryIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool directoryIdSpecified
        {
            get
            {
                return this.directoryIdFieldSpecified;
            }
            set
            {
                this.directoryIdFieldSpecified = value;
            }
        }

        /// <remarks/>
        public System.DateTime lastModified
        {
            get
            {
                return this.lastModifiedField;
            }
            set
            {
                this.lastModifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastModifiedSpecified
        {
            get
            {
                return this.lastModifiedFieldSpecified;
            }
            set
            {
                this.lastModifiedFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "urn:SecurityServer")]
        public string[] members
        {
            get
            {
                return this.membersField;
            }
            set
            {
                this.membersField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://soap.integration.crowd.atlassian.com")]
    public partial class SOAPNestableGroup
    {

        private long idField;

        private bool idFieldSpecified;

        private bool activeField;

        private bool activeFieldSpecified;

        private SOAPAttribute[] attributesField;

        private System.DateTime conceptionField;

        private bool conceptionFieldSpecified;

        private string descriptionField;

        private long directoryIdField;

        private bool directoryIdFieldSpecified;

        private string[] groupMembersField;

        private System.DateTime lastModifiedField;

        private bool lastModifiedFieldSpecified;

        private string nameField;

        /// <remarks/>
        public long ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified
        {
            get
            {
                return this.idFieldSpecified;
            }
            set
            {
                this.idFieldSpecified = value;
            }
        }

        /// <remarks/>
        public bool active
        {
            get
            {
                return this.activeField;
            }
            set
            {
                this.activeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activeSpecified
        {
            get
            {
                return this.activeFieldSpecified;
            }
            set
            {
                this.activeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
        public SOAPAttribute[] attributes
        {
            get
            {
                return this.attributesField;
            }
            set
            {
                this.attributesField = value;
            }
        }

        /// <remarks/>
        public System.DateTime conception
        {
            get
            {
                return this.conceptionField;
            }
            set
            {
                this.conceptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool conceptionSpecified
        {
            get
            {
                return this.conceptionFieldSpecified;
            }
            set
            {
                this.conceptionFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public long directoryId
        {
            get
            {
                return this.directoryIdField;
            }
            set
            {
                this.directoryIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool directoryIdSpecified
        {
            get
            {
                return this.directoryIdFieldSpecified;
            }
            set
            {
                this.directoryIdFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "urn:SecurityServer")]
        public string[] groupMembers
        {
            get
            {
                return this.groupMembersField;
            }
            set
            {
                this.groupMembersField = value;
            }
        }

        /// <remarks/>
        public System.DateTime lastModified
        {
            get
            {
                return this.lastModifiedField;
            }
            set
            {
                this.lastModifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastModifiedSpecified
        {
            get
            {
                return this.lastModifiedFieldSpecified;
            }
            set
            {
                this.lastModifiedFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void findAllGroupRelationshipsCompletedEventHandler(object sender, findAllGroupRelationshipsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findAllGroupRelationshipsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal findAllGroupRelationshipsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SOAPNestableGroup[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SOAPNestableGroup[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addGroupCompletedEventHandler(object sender, addGroupCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal addGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SOAPGroup Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SOAPGroup)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addPrincipalToRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void findPrincipalByTokenCompletedEventHandler(object sender, findPrincipalByTokenCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findPrincipalByTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal findPrincipalByTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SOAPPrincipal Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SOAPPrincipal)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updatePrincipalCredentialCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getGrantedAuthoritiesCompletedEventHandler(object sender, getGrantedAuthoritiesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGrantedAuthoritiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getGrantedAuthoritiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addPrincipalCompletedEventHandler(object sender, addPrincipalCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPrincipalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal addPrincipalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SOAPPrincipal Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SOAPPrincipal)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addAttributeToPrincipalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void invalidatePrincipalTokenCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void findAllGroupNamesCompletedEventHandler(object sender, findAllGroupNamesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findAllGroupNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal findAllGroupNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void findRoleMembershipsCompletedEventHandler(object sender, findRoleMembershipsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findRoleMembershipsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal findRoleMembershipsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void removePrincipalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void isValidPrincipalTokenCompletedEventHandler(object sender, isValidPrincipalTokenCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isValidPrincipalTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal isValidPrincipalTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void authenticatePrincipalSimpleCompletedEventHandler(object sender, authenticatePrincipalSimpleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authenticatePrincipalSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal authenticatePrincipalSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void removeRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCookieInfoCompletedEventHandler(object sender, getCookieInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCookieInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getCookieInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SOAPCookieInfo Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SOAPCookieInfo)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updatePrincipalAttributeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void searchGroupsCompletedEventHandler(object sender, searchGroupsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal searchGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SOAPGroup[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SOAPGroup[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCacheTimeCompletedEventHandler(object sender, getCacheTimeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCacheTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getCacheTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public long Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void isRoleMemberCompletedEventHandler(object sender, isRoleMemberCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isRoleMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal isRoleMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addAttributeToGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void findAllRoleNamesCompletedEventHandler(object sender, findAllRoleNamesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findAllRoleNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal findAllRoleNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void findRoleByNameCompletedEventHandler(object sender, findRoleByNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findRoleByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal findRoleByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SOAPRole Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SOAPRole)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void isCacheEnabledCompletedEventHandler(object sender, isCacheEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isCacheEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal isCacheEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void findGroupByNameCompletedEventHandler(object sender, findGroupByNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findGroupByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal findGroupByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SOAPGroup Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SOAPGroup)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void findGroupWithAttributesByNameCompletedEventHandler(object sender, findGroupWithAttributesByNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findGroupWithAttributesByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal findGroupWithAttributesByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SOAPGroup Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SOAPGroup)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void removePrincipalFromRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void findPrincipalWithAttributesByNameCompletedEventHandler(object sender, findPrincipalWithAttributesByNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findPrincipalWithAttributesByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal findPrincipalWithAttributesByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SOAPPrincipal Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SOAPPrincipal)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void authenticatePrincipalCompletedEventHandler(object sender, authenticatePrincipalCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authenticatePrincipalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal authenticatePrincipalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void findGroupMembershipsCompletedEventHandler(object sender, findGroupMembershipsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findGroupMembershipsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal findGroupMembershipsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addPrincipalToGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void removeGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void removeAttributeFromGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addAllPrincipalsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void removeAttributeFromPrincipalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addRoleCompletedEventHandler(object sender, addRoleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal addRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SOAPRole Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SOAPRole)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void findAllPrincipalNamesCompletedEventHandler(object sender, findAllPrincipalNamesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findAllPrincipalNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal findAllPrincipalNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void createPrincipalTokenCompletedEventHandler(object sender, createPrincipalTokenCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPrincipalTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal createPrincipalTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void searchRolesCompletedEventHandler(object sender, searchRolesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal searchRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SOAPRole[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SOAPRole[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void removePrincipalFromGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void findPrincipalByNameCompletedEventHandler(object sender, findPrincipalByNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findPrincipalByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal findPrincipalByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SOAPPrincipal Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SOAPPrincipal)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void resetPrincipalCredentialCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateGroupAttributeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void isGroupMemberCompletedEventHandler(object sender, isGroupMemberCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isGroupMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal isGroupMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void searchPrincipalsCompletedEventHandler(object sender, searchPrincipalsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchPrincipalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal searchPrincipalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SOAPPrincipal[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SOAPPrincipal[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getDomainCompletedEventHandler(object sender, getDomainCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void authenticateApplicationCompletedEventHandler(object sender, authenticateApplicationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authenticateApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal authenticateApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public AuthenticatedToken Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticatedToken)(this.results[0]));
            }
        }
    }
}